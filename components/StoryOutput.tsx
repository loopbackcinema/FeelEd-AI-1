import React, { useState } from 'react';
import type { Story } from '../types';
import { ShareIcon } from './icons/ShareIcon';

interface StoryOutputProps {
  story: Partial<Story>;
  audioUrl: string | null;
  onReset: () => void;
  isStreaming?: boolean;
}

const StorySection: React.FC<{ title: string; content?: string }> = ({ title, content }) => (
  <div className="bg-gradient-to-br from-white/60 to-purple-50/40 p-6 rounded-2xl backdrop-blur-lg border border-white/30 shadow-lg min-h-[120px] transition-all duration-300 hover:shadow-xl hover:scale-[1.01]">
    <h3 className="text-xl font-bold text-purple-800 mb-3">{title}</h3>
    {content ? (
        <p className="text-gray-700 leading-relaxed text-base whitespace-pre-wrap">{content}</p>
    ) : (
        <div className="space-y-3 pt-1">
            <div className="h-4 bg-gray-200 rounded w-5/6 animate-pulse"></div>
            <div className="h-4 bg-gray-200 rounded w-full animate-pulse"></div>
            <div className="h-4 bg-gray-200 rounded w-3/4 animate-pulse"></div>
        </div>
    )}
  </div>
);


export const StoryOutput: React.FC<StoryOutputProps> = ({ story, audioUrl, onReset, isStreaming = false }) => {
  const [isCopied, setIsCopied] = useState(false);

  const handleShare = async () => {
    if (!story || isStreaming || !audioUrl) return;

    const plainText = [
        `Title: ${story.title || 'Untitled Story'}`,
        `Introduction:\n${story.introduction || ''}`,
        `Emotional Trigger:\n${story.emotional_trigger || ''}`,
        `Concept Explanation:\n${story.concept_explanation || ''}`,
        `Resolution:\n${story.resolution || ''}`,
        `Moral of the Story:\n${story.moral_message || ''}`,
        `---`,
        `Generated by FeelEd AI`
    ].join('\n\n');

    const shareData = {
        title: `FeelEd AI Story: ${story.title || 'Untitled'}`,
        text: plainText,
    };

    if (navigator.share) {
        try {
            await navigator.share(shareData);
        } catch (error) {
            console.error('Error sharing story:', error);
        }
    } else {
        try {
            await navigator.clipboard.writeText(plainText);
            setIsCopied(true);
            setTimeout(() => setIsCopied(false), 2000);
        } catch (error) {
            console.error('Failed to copy story to clipboard:', error);
            alert('Failed to copy story.');
        }
    }
  };


  return (
    <div className="space-y-8 animate-fade-in">
      <div className="text-center">
        <h2 className="text-4xl font-bold text-gray-800 tracking-tight">{story.title || 'Generating Title...'}</h2>
        {story.emotion_tone && <p className="mt-2 text-lg text-indigo-600 font-medium">{story.emotion_tone} Story</p>}
      </div>

      <div className="bg-white p-6 rounded-2xl shadow-lg border border-gray-200 sticky top-4 z-10">
         <div className="flex items-center justify-between gap-4">
            <div className="flex-grow">
                 <h3 className="text-lg font-semibold text-gray-800 mb-3 text-center sm:text-left">Listen to the Story</h3>
                {audioUrl ? (
                    <audio controls src={audioUrl} className="w-full">
                    Your browser does not support the audio element.
                    </audio>
                ) : (
                    <div className="flex items-center justify-center sm:justify-start space-x-3 py-2">
                         <div className="w-4 h-4 bg-gray-300 rounded-full animate-pulse"></div>
                         <div className="w-4 h-4 bg-gray-300 rounded-full animate-pulse [animation-delay:0.2s]"></div>
                         <div className="w-4 h-4 bg-gray-300 rounded-full animate-pulse [animation-delay:0.4s]"></div>
                         <p className="text-gray-500">Generating narration...</p>
                    </div>
                )}
            </div>
             <div className="flex-shrink-0">
                <button
                    onClick={handleShare}
                    disabled={isStreaming || !audioUrl}
                    aria-label="Share Story"
                    className={`min-w-[95px] h-11 flex items-center justify-center px-4 rounded-xl transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed ${
                        isCopied
                        ? 'bg-green-100 text-green-700'
                        : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                    }`}
                >
                    {isCopied ? (
                        <span className="font-semibold text-sm">Copied!</span>
                    ) : (
                        <>
                            <ShareIcon className="w-5 h-5" />
                            <span className="ml-2 font-semibold text-sm">Share</span>
                        </>
                    )}
                </button>
            </div>
        </div>
      </div>

      <div className="space-y-6">
        <StorySection title="Introduction" content={story.introduction} />
        <StorySection title="Emotional Trigger" content={story.emotional_trigger} />
        <StorySection title="Concept Explanation" content={story.concept_explanation} />
        <StorySection title="Resolution" content={story.resolution} />
        <StorySection title="Moral of the Story" content={story.moral_message} />
      </div>

      <div className="pt-4 text-center">
        <button
          onClick={onReset}
          disabled={isStreaming}
          className="px-8 py-3 text-lg font-semibold text-indigo-600 bg-white border-2 border-indigo-600 rounded-xl hover:bg-indigo-50 focus:outline-none focus:ring-4 focus:ring-indigo-300 transition-all duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          {isStreaming ? 'Generating...' : 'Create Another Story'}
        </button>
      </div>
    </div>
  );
};